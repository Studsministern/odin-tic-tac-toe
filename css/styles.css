            /*****************************
            
                    BASIC SETTINGS:
            
            - Imports
            - Variables
            - Global reset

            *****************************/

@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

/* Variables */
:root {
    --header-footer-padding: 1.5rem;
    --title-square-size: 1.2rem;
    --board-gap: .5rem;
    --card-size: 6rem;

    --bg-color-main: #FFF;
    --bg-color-secondary: rgb(236, 236, 236);
    --bg-color-pulse: rgb(251, 224, 168);

    --pulse-duration: 1s;
    --pulse-repetitions: infinite;
}

/* Global reset */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-size: inherit;
    font-weight: inherit;
    font-family: inherit;
    color: inherit;
    background: inherit;
}



            /*****************************
            
                  DOCUMENT STRUCTURE:
            
            Body
                Header
                    Title
                Main
                    Gameboard
                        Card
                        Card
                        ...
                    Restart button
                Footer
                    Author

            *****************************/

body {
    min-height: 100vh;
    font: 16px black Helvetica, Verdana, sans-serif;
    display: flex;
    background: var(--bg-color-main);
}



            /********** HEADER **********/
header {
    position: fixed;
    inset: 0 0 auto 0;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    padding: var(--header-footer-padding) calc(var(--header-footer-padding) * 2);
    font-size: calc(var(--header-height) / 2);
}

.title {
    display: grid;
    grid: repeat(3, var(--title-square-size)) / repeat(3, var(--title-square-size));
    font-size: calc(var(--title-square-size) * 0.8);
    font-weight: bold;
    gap: calc(var(--title-square-size) / 12);
}

.title p {
    text-align: center;
    background: var(--bg-color-secondary);
    border-radius: calc(var(--title-square-size) / 6);
}



            /********** MAIN **********/
main {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
}

.game-div {
    display: grid;
    grid: ".       tie       ."       auto
          "player1 gameBoard player2" auto
          ".       restart   .      " auto
          / 1fr      auto     1fr;
    gap: 1.5rem;
}

/* Tie */
.tie {
    grid-area: tie;
    font-size: 1.5rem;
    font-weight: bold;
    text-align: center;
}

/* Players */
.player-info {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
}

.player1 {
    grid-area: player1;
}

.player2 {
    grid-area: player2;
}

.player-info p {
    transition: transform .5s;
}

.player-info.current p {
    font-weight: bold;
    transform: scale(1.1);
    transition: transform .3s;
}

.player-icon {
    height: var(--card-size);
    width: var(--card-size);
    transition: all .3s;
}

.player-info.current > .player-icon {
    background: url('../img/person_FILL1_wght400_GRAD0_opsz48.svg') no-repeat;
    background-size: contain;
}

.player-info:not(.current) .player-icon {
    background: url('../img/person_FILL0_wght400_GRAD0_opsz48.svg') no-repeat;
    background-size: contain;
}

/* GameBoard */
.gameBoard {
    grid-area: gameBoard;
    display: grid;
    grid: repeat(3, 1fr) / repeat(3, 1fr);
    gap: var(--board-gap);
}

/* Cards */
.card {
    width: var(--card-size);
    height: var(--card-size);
    background: var(--bg-color-secondary);
    border-radius: calc(var(--card-size) / 6);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: calc(var(--card-size) * 0.6);
    font-weight: 500;
    cursor: default;
}

.gameBoard:not(.game-over) > .card:hover:not(.filled) {
    transform: scale(1.05);
    transition: transform .05s;
    cursor: pointer;
}

.card:active {
    transform: scale(1);
}

.winCard {
    animation: pulse var(--pulse-duration) var(--pulse-repetitions) alternate ease-in-out;
}

/* Restart button */
.restart-button-div {
    grid-area: restart;
    display: flex;
    justify-content: center;
}

button.restart {
    padding: .6rem 1.2rem;
    border-radius: calc(var(--card-size) / 6);
    background: var(--bg-color-secondary);
}

button.restart:hover {
    transform: scale(1.03);
    transition: transform .05s;
}

button.restart:active {
    transform: scale(1);
}

.gameBoard.game-over ~ .restart-button-div button.restart {
    animation: pulse calc(var(--pulse-duration) * 3) ease-in-out;
    background: var(--bg-color-pulse);
}



            /********** FOOTER **********/
footer {
    position: fixed;
    inset: auto 0 0 0;
    padding: var(--header-footer-padding);
    display: flex;
    justify-content: center;
    align-items: center;
}



            /*****************************
            
                      ANIMATION:

            *****************************/

@keyframes pulse {
    0% {
        background: var(--bg-color-secondary);
    }

    100% {
        background: var(--bg-color-pulse);
    }
}



            /*****************************
            
                      ELEMENTS:

            *****************************/

button {
    border: none;
    cursor: pointer;
}

/* Common styling */
.hidden {
    visibility: hidden;
}